import mysql.connector
from mysql.connector import Error

DB_CONFIG = {
    'host': 'localhost',
    'user': 'root',
    'password': ''
}


def connect_to_mysql():
    try:
        return mysql.connector.connect(**DB_CONFIG)
    except Error as e:
        print("L·ªói k·∫øt n·ªëi MySQL:", e)
        return None


def setup_database():
    conn = connect_to_mysql()
    cursor = conn.cursor()

    # T·∫°o c∆° s·ªü d·ªØ li·ªáu n·∫øu ch∆∞a t·ªìn t·∫°i
    cursor.execute("CREATE DATABASE IF NOT EXISTS Days9")
    cursor.execute("USE Days9")

    # T·∫°o b·∫£ng members
    cursor.execute("""
                   CREATE TABLE IF NOT EXISTS members
                   (
                       member_id
                       INT
                       AUTO_INCREMENT
                       PRIMARY
                       KEY,
                       name
                       VARCHAR
                   (
                       100
                   ),
                       role VARCHAR
                   (
                       50
                   )
                       )
                   """)

    # T·∫°o b·∫£ng weekly_progress
    cursor.execute("""
                   CREATE TABLE IF NOT EXISTS weekly_progress
                   (
                       progress_id
                       INT
                       AUTO_INCREMENT
                       PRIMARY
                       KEY,
                       member_id
                       INT,
                       week_number
                       INT,
                       hours_worked
                       FLOAT
                       CHECK
                   (
                       hours_worked
                       >=
                       0
                   ),
                       tasks_completed INT,
                       notes TEXT,
                       FOREIGN KEY
                   (
                       member_id
                   ) REFERENCES members
                   (
                       member_id
                   )
                       )
                   """)

    conn.commit()
    cursor.close()
    conn.close()
    print("‚úÖ ƒê√£ thi·∫øt l·∫≠p c∆° s·ªü d·ªØ li·ªáu v√† b·∫£ng.")


def add_data():
    conn = connect_to_mysql()
    cursor = conn.cursor()
    cursor.execute("USE Days9")

    # Th√™m th√†nh vi√™n
    members = [
        ("An", "Developer"),
        ("B√¨nh", "Tester"),
        ("C∆∞·ªùng", "Project Manager"),
        ("D∆∞∆°ng", "Developer"),
        ("Evy", "Designer")
    ]
    cursor.executemany("INSERT INTO members (name, role) VALUES (%s, %s)", members)

    # L·∫•y member_id ƒë·ªÉ th√™m b·∫£n ghi ti·∫øn ƒë·ªô
    cursor.execute("SELECT member_id FROM members")
    member_ids = [row[0] for row in cursor.fetchall()]

    progress_data = [
        (member_ids[0], 1, 40.0, 5, "L√†m backend API"),
        (member_ids[1], 1, 38.5, 4, "Ki·ªÉm th·ª≠ module ƒëƒÉng nh·∫≠p"),
        (member_ids[2], 1, 30.0, 3, "Qu·∫£n l√Ω team"),
        (member_ids[3], 1, 42.0, 6, "X·ª≠ l√Ω giao di·ªán ng∆∞·ªùi d√πng"),
        (member_ids[4], 1, 36.0, 4, "Thi·∫øt k·∫ø UI trang ch·ªß"),
        (member_ids[0], 2, 39.0, 6, "T·ªëi ∆∞u API"),
        (member_ids[1], 2, 37.0, 5, "Vi·∫øt test case"),
        (member_ids[2], 2, 32.0, 3, "H·ªçp kh√°ch h√†ng"),
        (member_ids[3], 2, 44.0, 7, "C·∫≠p nh·∫≠t giao di·ªán"),
        (member_ids[4], 2, 35.0, 4, "Thi·∫øt k·∫ø giao di·ªán dashboard")
    ]

    cursor.executemany("""
                       INSERT INTO weekly_progress (member_id, week_number, hours_worked, tasks_completed, notes)
                       VALUES (%s, %s, %s, %s, %s)
                       """, progress_data)

    conn.commit()
    cursor.close()
    conn.close()
    print("‚úÖ ƒê√£ th√™m d·ªØ li·ªáu th√†nh vi√™n v√† ti·∫øn ƒë·ªô.")


def query_progress(week_number):
    conn = connect_to_mysql()
    cursor = conn.cursor()
    cursor.execute("USE Days9")

    query = """
            SELECT m.name, wp.hours_worked, wp.tasks_completed, wp.notes
            FROM weekly_progress wp
                     JOIN members m ON wp.member_id = m.member_id
            WHERE wp.week_number = %s
            ORDER BY wp.tasks_completed DESC LIMIT 5 \
            """
    cursor.execute(query, (week_number,))
    results = cursor.fetchall()

    print(f"\nüìÖ Tu·∫ßn {week_number}:")
    for name, hours, tasks, note in results:
        print(f"- {name}: {hours} gi·ªù, {tasks} nhi·ªám v·ª•, Ghi ch√∫: {note}")

    cursor.close()
    conn.close()


def update_progress(progress_id, new_hours, new_notes):
    conn = connect_to_mysql()
    cursor = conn.cursor()
    cursor.execute("USE Days9")

    cursor.execute("""
                   UPDATE weekly_progress
                   SET hours_worked = %s,
                       notes        = %s
                   WHERE progress_id = %s
                   """, (new_hours, new_notes, progress_id))

    conn.commit()
    print(f"‚úÖ ƒê√£ c·∫≠p nh·∫≠t ti·∫øn ƒë·ªô ID {progress_id}.")
    cursor.close()
    conn.close()


def delete_progress(week_number):
    conn = connect_to_mysql()
    cursor = conn.cursor()
    cursor.execute("USE Days9")

    cursor.execute("SELECT COUNT(*) FROM weekly_progress WHERE week_number = %s", (week_number,))
    count = cursor.fetchone()[0]
    if count == 0:
        print(f"‚ö†Ô∏è Kh√¥ng c√≥ b·∫£n ghi n√†o cho tu·∫ßn {week_number}.")
    else:
        cursor.execute("DELETE FROM weekly_progress WHERE week_number = %s", (week_number,))
        conn.commit()
        print(f"üóëÔ∏è ƒê√£ x√≥a {count} b·∫£n ghi ti·∫øn ƒë·ªô tu·∫ßn {week_number}.")

    cursor.close()
    conn.close()


def generate_summary():
    conn = connect_to_mysql()
    cursor = conn.cursor()
    cursor.execute("USE Days9")

    cursor.execute("""
                   SELECT m.name, SUM(wp.hours_worked), SUM(wp.tasks_completed)
                   FROM weekly_progress wp
                            JOIN members m ON wp.member_id = m.member_id
                   GROUP BY m.name
                   """)

    results = cursor.fetchall()
    print("\nüìä B√°o c√°o t·ªïng k·∫øt:")
    for name, total_hours, total_tasks in results:
        print(f"- {name}: T·ªïng {total_hours} gi·ªù, {total_tasks} nhi·ªám v·ª•")

    cursor.close()
    conn.close()


def cleanup_database():
    conn = connect_to_mysql()
    cursor = conn.cursor()
    cursor.execute("USE Days9")

    cursor.execute("SHOW TABLES LIKE 'weekly_progress'")
    if cursor.fetchone():
        cursor.execute("DROP TABLE weekly_progress")
        conn.commit()
        print("üßπ ƒê√£ x√≥a b·∫£ng weekly_progress.")
    else:
        print("‚ö†Ô∏è B·∫£ng weekly_progress kh√¥ng t·ªìn t·∫°i.")

    cursor.close()
    conn.close()


def main():
    setup_database()
    add_data()
    query_progress(1)
    update_progress(1, 45.0, "Ho√†n th√†nh s·ªõm")
    delete_progress(2)
    generate_summary()
    cleanup_database()


if __name__ == "__main__":
    main()
